<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Z/leVUrqmo1VK3COKy26Lql3gtsicZ/YzrtDnVTPsxqau6OpbOFlKz4KdvJHvnlnwy9G8+m01fV1rKNC
        ndVqXzhbZbGMzKj32yOXXZnnmjpxGNtOpFepPBFlKetx++cI/Nplx2x+zFuz+km6rhdqq8RNW6OOLI4K
        Vs70cM8MuxQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfNq9Hpt
        fRuo6mlZWp3ctt8Yx743p8Mcafa7myyuvdN2mr19Lj9Hiq2R7uthd/7SpQCReKu3vlPc/wCKeKu3vlPc
        /wCKroCReKu3vlPc/wCKeKu3vlPc/wCKroCReKu3vlPc/wCKeKu3vlPc/wCKroCReKu3vlPc/wCKeKu3
        vlPc/wCKroCReKu3vlPc/wCKeKu3vlPc/wCKroCReKu3vlPc/wCKeKu3vlPc/wCKroCVafmt0lt2NfX1
        qkb1lO2nj+czf+x3eU7P5ZkluGk09tl0xhdUu+1Vu9988eHgjCHugAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAH//2Q==
</value>
  </data>
</root>